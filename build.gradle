apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'maven'
 

// project information
version = '2.0-beta-2-SNAPSHOT'
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
group = 'org.seasar.doma'

compileJava {
    doFirst {
        ant.replaceregexp(
            match: /(private static final String VERSION = ")[^"]*(")/,
            replace: "\\1${version}\\2",
            encoding: 'UTF-8', 
            flags: 'g') {
                fileset(dir: '.') {
                    include(name: '**/Artifact.java')
                }
            }
    }

    options.encoding = 'UTF-8'
}
 
compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-proc:none']
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    options.docEncoding = 'UTF-8'
    exclude '**/internal/**'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Doma', 'Implementation-Version': version
    }
}
 
test {
    scanForTestClasses = false
    includes = ['**/*Test.class']
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

repositories {
    mavenCentral()
    maven {url 'http://maven.seasar.org/maven2'}
}
 
dependencies {
    testCompile 'org.seasar.aptina:aptina-unit:1.0.0'
}

// creating jars
task sourcesJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar (type : Jar, dependsOn : javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// collect artifacts to be signed
artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

// sign artifacts
signing {
    sign configurations.archives
}

gradle.taskGraph.whenReady {taskGraph ->
    if (!taskGraph.hasTask(uploadArchives) || version.endsWith('-SNAPSHOT')) {
        signArchives.onlyIf { false }
    }
}

// uploading artifacts
uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment {MavenDeployment deployment ->
            signing.signPom(deployment)
        }
        repository (url : sonatypeUrl) {
            authentication (
                    userName : sonatypeUsername,
                    password : sonatypePassword)
        }
        snapshotRepository (url : sonatypeSnapshotUrl) {
            authentication (
                    userName : sonatypeUsername,
                    password : sonatypePassword)
        }
        pom.project {
            name project.name
            packaging 'jar'
            description 'Java Database Access Framework'
            url projectUrl
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url githubUrl
                connection "scm:git:${githubUrl}"
                developerConnection "scm:git:${githubUrl}"
            }
            developers {
                developer {
                    id 'nakamura-to'
                    name 'Toshihiro Nakamura'
                    email 'toshihiro.nakamura@gmail.com'
                }
            }
        }
    }
}

apply from:'eclipse.gradle'