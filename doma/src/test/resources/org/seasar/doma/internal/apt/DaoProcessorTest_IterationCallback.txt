package org.seasar.doma.internal.apt.dao;

@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01 09:00:00")
public class IterationCallbackDao_ extends org.seasar.doma.jdbc.DomaAbstractDao implements org.seasar.doma.internal.apt.dao.IterationCallbackDao {

    public IterationCallbackDao_() {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), null);
    }

    public IterationCallbackDao_(javax.sql.DataSource dataSource) {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), dataSource);
    }

    protected IterationCallbackDao_(org.seasar.doma.jdbc.Config config) {
        super(config, config.dataSource());
    }

    @Override
    public java.lang.Integer iterate(java.lang.Integer id, java.lang.String name, org.seasar.doma.jdbc.IterationCallback<java.lang.Integer, org.seasar.doma.internal.apt.entity.Emp> callback) {
        entering("org.seasar.doma.internal.apt.dao.IterationCallbackDao_", "iterate", id, name, callback);
        if (callback == null) {
            throw new org.seasar.doma.DomaNullPointerException("callback");
        }
        org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery query = new org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery();
        query.setConfig(config);
        query.setSqlFilePath(org.seasar.doma.internal.jdbc.sql.SqlFileUtil.buildPath("org.seasar.doma.internal.apt.dao.IterationCallbackDao", "iterate"));
        query.addParameter("id", java.lang.Integer.class, id);
        query.addParameter("name", java.lang.String.class, name);
        query.addParameter("callback", org.seasar.doma.jdbc.IterationCallback.class, callback);
        query.setCallerClassName("org.seasar.doma.internal.apt.dao.IterationCallbackDao_");
        query.setCallerMethodName("iterate");
        query.setQueryTimeout(-1);
        query.setMaxRows(-1);
        query.setFetchSize(-1);
        query.prepare();
        org.seasar.doma.internal.jdbc.command.SelectCommand<java.lang.Integer> command = new org.seasar.doma.internal.jdbc.command.SelectCommand<java.lang.Integer>(query, new org.seasar.doma.internal.jdbc.command.EntityIterationHandler<java.lang.Integer, org.seasar.doma.internal.apt.entity.Emp>(new org.seasar.doma.internal.apt.entity.Emp_(), callback));
        java.lang.Integer result = command.execute();
        exiting("org.seasar.doma.internal.apt.dao.IterationCallbackDao_", "iterate", result);
        return result;
    }

    @Override
    public java.lang.Integer iterate(org.seasar.doma.jdbc.IterationCallback<java.lang.Integer, java.lang.String> callback) {
        entering("org.seasar.doma.internal.apt.dao.IterationCallbackDao_", "iterate", callback);
        if (callback == null) {
            throw new org.seasar.doma.DomaNullPointerException("callback");
        }
        org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery query = new org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery();
        query.setConfig(config);
        query.setSqlFilePath(org.seasar.doma.internal.jdbc.sql.SqlFileUtil.buildPath("org.seasar.doma.internal.apt.dao.IterationCallbackDao", "iterate"));
        query.addParameter("callback", org.seasar.doma.jdbc.IterationCallback.class, callback);
        query.setCallerClassName("org.seasar.doma.internal.apt.dao.IterationCallbackDao_");
        query.setCallerMethodName("iterate");
        query.setQueryTimeout(-1);
        query.setMaxRows(-1);
        query.setFetchSize(-1);
        query.prepare();
        org.seasar.doma.internal.jdbc.command.SelectCommand<java.lang.Integer> command = new org.seasar.doma.internal.jdbc.command.SelectCommand<java.lang.Integer>(query, new org.seasar.doma.internal.jdbc.command.ValueIterationHandler<java.lang.Integer, java.lang.String>(new org.seasar.doma.wrapper.StringWrapper(), callback));
        java.lang.Integer result = command.execute();
        exiting("org.seasar.doma.internal.apt.dao.IterationCallbackDao_", "iterate", result);
        return result;
    }

    @Override
    public java.lang.String iterate(org.seasar.doma.internal.apt.dao.HogeIterationCallback callback) {
        entering("org.seasar.doma.internal.apt.dao.IterationCallbackDao_", "iterate", callback);
        if (callback == null) {
            throw new org.seasar.doma.DomaNullPointerException("callback");
        }
        org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery query = new org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery();
        query.setConfig(config);
        query.setSqlFilePath(org.seasar.doma.internal.jdbc.sql.SqlFileUtil.buildPath("org.seasar.doma.internal.apt.dao.IterationCallbackDao", "iterate"));
        query.addParameter("callback", org.seasar.doma.internal.apt.dao.HogeIterationCallback.class, callback);
        query.setCallerClassName("org.seasar.doma.internal.apt.dao.IterationCallbackDao_");
        query.setCallerMethodName("iterate");
        query.setQueryTimeout(-1);
        query.setMaxRows(-1);
        query.setFetchSize(-1);
        query.prepare();
        org.seasar.doma.internal.jdbc.command.SelectCommand<java.lang.String> command = new org.seasar.doma.internal.jdbc.command.SelectCommand<java.lang.String>(query, new org.seasar.doma.internal.jdbc.command.EntityIterationHandler<java.lang.String, org.seasar.doma.internal.apt.entity.Emp>(new org.seasar.doma.internal.apt.entity.Emp_(), callback));
        java.lang.String result = command.execute();
        exiting("org.seasar.doma.internal.apt.dao.IterationCallbackDao_", "iterate", result);
        return result;
    }

}
