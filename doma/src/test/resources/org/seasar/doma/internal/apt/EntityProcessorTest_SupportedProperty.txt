package org.seasar.doma.internal.apt.entity;

@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01 09:00:00")
public class SupportedPropertyEntity_ implements org.seasar.doma.jdbc.entity.EntityMetaFactory<org.seasar.doma.internal.apt.entity.SupportedPropertyEntity> {

    @Override
    public org.seasar.doma.jdbc.entity.EntityMeta<org.seasar.doma.internal.apt.entity.SupportedPropertyEntity> createEntityMeta() {
        return new Meta();
    }

    @Override
    public org.seasar.doma.jdbc.entity.EntityMeta<org.seasar.doma.internal.apt.entity.SupportedPropertyEntity> createEntityMeta(org.seasar.doma.internal.apt.entity.SupportedPropertyEntity entity) {
        return new Meta(entity);
    }

    public static class Meta extends org.seasar.doma.jdbc.entity.AbstractEntityMeta<org.seasar.doma.internal.apt.entity.SupportedPropertyEntity> {

        private static final org.seasar.doma.jdbc.entity.BuiltinEntityListener __listener = new org.seasar.doma.jdbc.entity.BuiltinEntityListener();

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BooleanWrapper> primitiveBoolean = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BooleanWrapper>("primitiveBoolean", null, new org.seasar.doma.wrapper.BooleanWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ByteWrapper> primitiveByte = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ByteWrapper>("primitiveByte", null, new org.seasar.doma.wrapper.ByteWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ShortWrapper> primitiveShort = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ShortWrapper>("primitiveShort", null, new org.seasar.doma.wrapper.ShortWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.IntegerWrapper> primitiveInt = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.IntegerWrapper>("primitiveInt", null, new org.seasar.doma.wrapper.IntegerWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.LongWrapper> primitiveLong = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.LongWrapper>("primitiveLong", null, new org.seasar.doma.wrapper.LongWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.FloatWrapper> primitiveFloat = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.FloatWrapper>("primitiveFloat", null, new org.seasar.doma.wrapper.FloatWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.DoubleWrapper> primitiveDouble = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.DoubleWrapper>("primitiveDouble", null, new org.seasar.doma.wrapper.DoubleWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BytesWrapper> primitiveBytes = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BytesWrapper>("primitiveBytes", null, new org.seasar.doma.wrapper.BytesWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BooleanWrapper> booleanObject = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BooleanWrapper>("booleanObject", null, new org.seasar.doma.wrapper.BooleanWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ByteWrapper> byteObject = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ByteWrapper>("byteObject", null, new org.seasar.doma.wrapper.ByteWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.IntegerWrapper> integerObject = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.IntegerWrapper>("integerObject", null, new org.seasar.doma.wrapper.IntegerWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.LongWrapper> longObject = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.LongWrapper>("longObject", null, new org.seasar.doma.wrapper.LongWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.FloatWrapper> floatObject = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.FloatWrapper>("floatObject", null, new org.seasar.doma.wrapper.FloatWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.DoubleWrapper> doubleObject = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.DoubleWrapper>("doubleObject", null, new org.seasar.doma.wrapper.DoubleWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.StringWrapper> string = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.StringWrapper>("string", null, new org.seasar.doma.wrapper.StringWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BlobWrapper> blob = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BlobWrapper>("blob", null, new org.seasar.doma.wrapper.BlobWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ClobWrapper> clob = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ClobWrapper>("clob", null, new org.seasar.doma.wrapper.ClobWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.NClobWrapper> nclob = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.NClobWrapper>("nclob", null, new org.seasar.doma.wrapper.NClobWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ArrayWrapper> array = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.ArrayWrapper>("array", null, new org.seasar.doma.wrapper.ArrayWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BigDecimalWrapper> bigDecimal = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BigDecimalWrapper>("bigDecimal", null, new org.seasar.doma.wrapper.BigDecimalWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BigIntegerWrapper> bigInteger = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.BigIntegerWrapper>("bigInteger", null, new org.seasar.doma.wrapper.BigIntegerWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.DateWrapper> date = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.DateWrapper>("date", null, new org.seasar.doma.wrapper.DateWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.TimeWrapper> time = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.TimeWrapper>("time", null, new org.seasar.doma.wrapper.TimeWrapper(), true, true);

        private final org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.TimestampWrapper> timestamp = new org.seasar.doma.jdbc.entity.BasicPropertyMeta<org.seasar.doma.wrapper.TimestampWrapper>("timestamp", null, new org.seasar.doma.wrapper.TimestampWrapper(), true, true);

        private final org.seasar.doma.internal.apt.entity.SupportedPropertyEntity __entity;

        private final java.util.Set<java.lang.String> __modifiedProperties;

        private final String __name = "SupportedPropertyEntity";

        private java.util.List<org.seasar.doma.jdbc.entity.EntityPropertyMeta<?>> __entityProperties;

        private java.util.Map<String, org.seasar.doma.jdbc.entity.EntityPropertyMeta<?>> __entityPropertyMap;

        private Meta() {
            this(new org.seasar.doma.internal.apt.entity.SupportedPropertyEntity());
        }

        private Meta(org.seasar.doma.internal.apt.entity.SupportedPropertyEntity entity) {
            super(null, null, null);
            primitiveBoolean.getWrapper().set(entity.primitiveBoolean);
            primitiveByte.getWrapper().set(entity.primitiveByte);
            primitiveShort.getWrapper().set(entity.primitiveShort);
            primitiveInt.getWrapper().set(entity.primitiveInt);
            primitiveLong.getWrapper().set(entity.primitiveLong);
            primitiveFloat.getWrapper().set(entity.primitiveFloat);
            primitiveDouble.getWrapper().set(entity.primitiveDouble);
            primitiveBytes.getWrapper().set(entity.primitiveBytes);
            booleanObject.getWrapper().set(entity.booleanObject);
            byteObject.getWrapper().set(entity.byteObject);
            integerObject.getWrapper().set(entity.integerObject);
            longObject.getWrapper().set(entity.longObject);
            floatObject.getWrapper().set(entity.floatObject);
            doubleObject.getWrapper().set(entity.doubleObject);
            string.getWrapper().set(entity.string);
            blob.getWrapper().set(entity.blob);
            clob.getWrapper().set(entity.clob);
            nclob.getWrapper().set(entity.nclob);
            array.getWrapper().set(entity.array);
            bigDecimal.getWrapper().set(entity.bigDecimal);
            bigInteger.getWrapper().set(entity.bigInteger);
            date.getWrapper().set(entity.date);
            time.getWrapper().set(entity.time);
            timestamp.getWrapper().set(entity.timestamp);
            __entity = entity;
            __modifiedProperties = null;
        }

        @Override
        public String getName() {
            return __name;
        }

        @Override
        public void preInsert() {
            __listener.preInsert(__entity);
        }

        @Override
        public void preUpdate() {
            __listener.preUpdate(__entity);
        }

        @Override
        public void preDelete() {
            __listener.preDelete(__entity);
        }

        @Override
        public java.util.List<org.seasar.doma.jdbc.entity.EntityPropertyMeta<?>> getPropertyMetas() {
            if (__entityProperties == null) {
                java.util.List<org.seasar.doma.jdbc.entity.EntityPropertyMeta<?>> __list = new java.util.ArrayList<org.seasar.doma.jdbc.entity.EntityPropertyMeta<?>>();
                __list.add(primitiveBoolean);
                __list.add(primitiveByte);
                __list.add(primitiveShort);
                __list.add(primitiveInt);
                __list.add(primitiveLong);
                __list.add(primitiveFloat);
                __list.add(primitiveDouble);
                __list.add(primitiveBytes);
                __list.add(booleanObject);
                __list.add(byteObject);
                __list.add(integerObject);
                __list.add(longObject);
                __list.add(floatObject);
                __list.add(doubleObject);
                __list.add(string);
                __list.add(blob);
                __list.add(clob);
                __list.add(nclob);
                __list.add(array);
                __list.add(bigDecimal);
                __list.add(bigInteger);
                __list.add(date);
                __list.add(time);
                __list.add(timestamp);
                __entityProperties = java.util.Collections.unmodifiableList(__list);
            }
            return __entityProperties;
        }

        @Override
        public org.seasar.doma.jdbc.entity.EntityPropertyMeta<?> getPropertyMeta(String __name) {
            if (__entityPropertyMap == null) {
                java.util.Map<String, org.seasar.doma.jdbc.entity.EntityPropertyMeta<?>> __map = new java.util.HashMap<String, org.seasar.doma.jdbc.entity.EntityPropertyMeta<?>>();
                __map.put("primitiveBoolean", primitiveBoolean);
                __map.put("primitiveByte", primitiveByte);
                __map.put("primitiveShort", primitiveShort);
                __map.put("primitiveInt", primitiveInt);
                __map.put("primitiveLong", primitiveLong);
                __map.put("primitiveFloat", primitiveFloat);
                __map.put("primitiveDouble", primitiveDouble);
                __map.put("primitiveBytes", primitiveBytes);
                __map.put("booleanObject", booleanObject);
                __map.put("byteObject", byteObject);
                __map.put("integerObject", integerObject);
                __map.put("longObject", longObject);
                __map.put("floatObject", floatObject);
                __map.put("doubleObject", doubleObject);
                __map.put("string", string);
                __map.put("blob", blob);
                __map.put("clob", clob);
                __map.put("nclob", nclob);
                __map.put("array", array);
                __map.put("bigDecimal", bigDecimal);
                __map.put("bigInteger", bigInteger);
                __map.put("date", date);
                __map.put("time", time);
                __map.put("timestamp", timestamp);
                __entityPropertyMap = java.util.Collections.unmodifiableMap(__map);
            }
            return __entityPropertyMap.get(__name);
        }

        @Override
        public org.seasar.doma.jdbc.entity.GeneratedIdPropertyMeta<?> getGeneratedIdProperty() {
            return null;
        }

        @Override
        public org.seasar.doma.jdbc.entity.VersionPropertyMeta<?> getVersionProperty() {
            return null;
        }

        @Override
        public void refreshEntity() {
            refreshEntityInternal();
        }

        public void refreshEntityInternal() {
            __entity.primitiveBoolean = toPrimitive(primitiveBoolean.getWrapper().get());
            __entity.primitiveByte = toPrimitive(primitiveByte.getWrapper().get());
            __entity.primitiveShort = toPrimitive(primitiveShort.getWrapper().get());
            __entity.primitiveInt = toPrimitive(primitiveInt.getWrapper().get());
            __entity.primitiveLong = toPrimitive(primitiveLong.getWrapper().get());
            __entity.primitiveFloat = toPrimitive(primitiveFloat.getWrapper().get());
            __entity.primitiveDouble = toPrimitive(primitiveDouble.getWrapper().get());
            __entity.primitiveBytes = primitiveBytes.getWrapper().get();
            __entity.booleanObject = booleanObject.getWrapper().get();
            __entity.byteObject = byteObject.getWrapper().get();
            __entity.integerObject = integerObject.getWrapper().get();
            __entity.longObject = longObject.getWrapper().get();
            __entity.floatObject = floatObject.getWrapper().get();
            __entity.doubleObject = doubleObject.getWrapper().get();
            __entity.string = string.getWrapper().get();
            __entity.blob = blob.getWrapper().get();
            __entity.clob = clob.getWrapper().get();
            __entity.nclob = nclob.getWrapper().get();
            __entity.array = array.getWrapper().get();
            __entity.bigDecimal = bigDecimal.getWrapper().get();
            __entity.bigInteger = bigInteger.getWrapper().get();
            __entity.date = date.getWrapper().get();
            __entity.time = time.getWrapper().get();
            __entity.timestamp = timestamp.getWrapper().get();
        }

        @Override
        public org.seasar.doma.internal.apt.entity.SupportedPropertyEntity getEntity() {
            refreshEntityInternal();
            return __entity;
        }

        @Override
        public Class<org.seasar.doma.internal.apt.entity.SupportedPropertyEntity> getEntityClass() {
            return org.seasar.doma.internal.apt.entity.SupportedPropertyEntity.class;
        }

        @Override
        public java.util.Set<String> getModifiedProperties() {
            return __modifiedProperties;
        }

    }

}
