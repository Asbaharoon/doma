package org.seasar.doma.internal.apt.dao;

@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01 09:00:00")
public class ArrayFactoryDao_ extends org.seasar.doma.jdbc.DomaAbstractDao implements org.seasar.doma.internal.apt.dao.ArrayFactoryDao {

    public ArrayFactoryDao_() {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), null);
    }

    public ArrayFactoryDao_(javax.sql.DataSource dataSource) {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), dataSource);
    }

    protected ArrayFactoryDao_(org.seasar.doma.jdbc.Config config) {
        super(config, config.dataSource());
    }

    @Override
    public org.seasar.doma.domain.ArrayDomain<java.lang.String> create(java.lang.String[] elements) {
        entering("org.seasar.doma.internal.apt.dao.ArrayFactoryDao_", "create", (Object)elements);
        if (elements == null) {
            throw new org.seasar.doma.DomaNullPointerException("elements");
        }
        org.seasar.doma.internal.jdbc.query.ArrayCreateQuery<org.seasar.doma.domain.ArrayDomain<java.lang.String>> query = new org.seasar.doma.internal.jdbc.query.ArrayCreateQuery<org.seasar.doma.domain.ArrayDomain<java.lang.String>>();
        query.setConfig(config);
        query.setCallerClassName("org.seasar.doma.internal.apt.dao.ArrayFactoryDao_");
        query.setCallerMethodName("create");
        query.setTypeName("varchar");
        query.setElements(elements);
        query.setResult(new org.seasar.doma.domain.ArrayDomain<java.lang.String>());
        query.compile();
        org.seasar.doma.internal.jdbc.command.CreateCommand<org.seasar.doma.domain.ArrayDomain<java.lang.String>> command = new org.seasar.doma.internal.jdbc.command.CreateCommand<org.seasar.doma.domain.ArrayDomain<java.lang.String>>(query);
        org.seasar.doma.domain.ArrayDomain<java.lang.String> result = command.execute();
        exiting("org.seasar.doma.internal.apt.dao.ArrayFactoryDao_", "create", result);
        return result;
    }

}