<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>更新</title>
	</properties>
	<body>
		<section name="目次">
			<ul>
				<li><a href="#概要">概要</a></li>
				<li><a href="#SQLの自動生成による更新">SQLの自動生成による更新</a></li>
			</ul>
		</section>
		<section name="概要">
			<p>
				SQLはすべてバインド変数（?）を使った準備された文に変換されて実行されますが、
				このドキュメントでは、発行されたSQLがどのようなものかわかりやすくするためにバインド変数を実際の値に置き換えたログ用のSQLを示します。
			</p>
		</section>
		<section name="SQLの自動生成による更新">
			<p>
				test/tutorial/UpdateTest.javaのtestUpdateメソッドを参照してください。
				SQLの自動生成による更新です。
			</p>
			<p>
				Daoのメソッドは次のとおりです。
			</p>
<source><![CDATA[@Update
int update(Employee employee);]]></source>
			<p>
				Daoのメソッドは次のように呼び出します。
				識別子は自動生成されるのでエンティティに設定する必要はありません。
			</p>
<source><![CDATA[Employee employee = dao.selectById(1);
employee.setName("hoge");
employee.setJobType(JobType.PRESIDENT);

dao.update(employee);]]></source>
			<p>
				SQLのログは次のように出力されます（改行しています）。
			</p>
<source><![CDATA[update Employee 
set 
  JOB_TYPE = 'PRESIDENT', 
  name = 'hoge', 
  updateTimestamp = '2009-11-21 17:06:37.593',
  VERSION = 1 + 1 
where 
  id = 1 
  and 
  VERSION = 1
]]></source>
			<p>
				@Versionが注釈されたversionプロパティに対応するカラムは検索条件に含まれます。
				また、versionプロパティに対応するカラムが増分して更新されます。
			</p>
			<p>
				updateTimestampプロパティはEmployeeListenerで自動設定されます。
				test/tutorial/EmployeeListener.javaを参照してください。
			</p>
			<p>
				エンティティクラスに@OriginalStatesが注釈されたプロパティがある場合、
				バージョン番号を除き、
				Daoから取得後に変更された値のみがUPDATE文のSET句に含まれます。
			</p>
		</section>
	</body>
</document>