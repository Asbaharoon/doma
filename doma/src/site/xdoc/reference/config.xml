<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>設定</title>
	</properties>
	<body>
		<section name="概要">
			<p>
				DAOに対する設定は、<a href ="../apidocs/org/seasar/doma/jdbc/Config.html"><code>org.seasar.doma.jdbc.Config</code></a> の実装クラスで表し、
				<code>@Dao</code> の <code>config</code> 要素に指定します。
			</p>
			<p>
				次の事柄を設定で変更できます。
			</p>
			<ul>
				<li>データソース</li>
				<li>データソースの名前</li>
				<li>データベースの方言</li>
				<li>エンティティやプロパティのネーミング規約</li>
				<li>JDBC関連のログ出力に使用するロギングフレームワークへのアダプタ</li>
				<li>SQLファイルのキャッシュ戦略</li>
				<li>トランザクション属性がREQUIRES_NEWであるトランザクションとの連動方法</li>
				<li>クエリ時に使用するパラメータ（タイムアウト、最大件数、フェッチ件数、バッチサイズ）</li>
			</ul>
		</section>
		<section name="設定クラスの作成">
			<p>
				<code>org.seasar.doma.jdbc.Config</code>を直接実装してもかまいませんが、
				いくつかのデフォルトの設定をもつ <code>org.seasar.doma.jdbc.DomaAbstractConfig</code>
				を継承することもできます。
			</p>
<source>public class AppConfig extends DomaAbstractConfig {
    ...
}</source>
			<p>
				<code>Config</code> の実装クラスは、publicなデフォルトコンストラクタ（引数なしのコンストラクタ）を持たねばいけません。
				また、どのメソッドも <code>null</code> を返してはいけません。
			</p>
			<p>
				<code>dataSource</code> メソッドでは、DAOがアクセスするデータソースを返してください。
			</p>
			<p>
				<code>dialect</code> メソッドでは、使用するデータベースにあわせた方言を返すようにしてください。
				現在サポートされているデータベースとその方言を表すクラスは次のとおりです。
			</p>
			<table>
				<tr>
					<th>データベース</th>
					<th>方言クラスの名前</th>
				</tr>
				<tr>
					<td>HSQLDB</td>
					<td><code>org.seasar.doma.jdbc.dialect.HsqldbDialect</code></td>
				</tr>
				<tr>
					<td>MySql</td>
					<td><code>org.seasar.doma.jdbc.dialect.MySqlDialect</code></td>
				</tr>
				<tr>
					<td>PostgreSQL</td>
					<td><code>org.seasar.doma.jdbc.dialect.PostgresDialect</code></td>
				</tr>
				<tr>
					<td>Oracle Database</td>
					<td><code>org.seasar.doma.jdbc.dialect.OracleDialect</code></td>
				</tr>
			</table>
			<p>
				その他、<code>Config</code> のほとんどのメソッドがインタフェースを返すようになっています。
				必要に応じて適切な実装クラスを用意し、そのインスタンスを返すようにしてください。
			</p>
		</section>
		<section name="Seasar2を利用する場合の設定例">
			<p>
				Seasar2を利用する場合、
				<code>Config</code> の実装クラスでは、
				Seasar2が管理するデータソースやトランザクションマネジャーと連携するとよいでしょう。
				また、ロギングフレームワークも統一したほうが管理しやすいでしょう。
			</p>
			<p>
				例については、<a href="../downloads.html">ダウンロードページ</a>で提供している「SAStrutsを利用したデモアプリ」を参照してください。
			</p>
		</section>
	</body>
</document>