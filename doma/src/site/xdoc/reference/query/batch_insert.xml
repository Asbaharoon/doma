<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>バッチ挿入</title>
	</properties>
	<body>
		<section name="目次">
			<ul>
				<li><a href="#概要">概要</a></li>
				<li><a href="#SQLの自動生成によるバッチ挿入">SQLの自動生成によるバッチ挿入</a>
					<ul>
						<li><a href="#識別子">識別子</a></li>
						<li><a href="#バージョン番号">バージョン番号</a></li>
						<li><a href="#挿入対象プロパティ">挿入対象プロパティ</a></li>
					</ul>
				</li>
				<li><a href="#SQLファイルによるバッチ挿入">SQLファイルによるバッチ挿入</a></li>
				<li><a href="#一意制約違反">一意制約違反</a></li>
				<li><a href="#クエリタイムアウト">クエリタイムアウト</a></li>
			</ul>
		</section>
		<section name="概要">
			<p>
				バッチ挿入を行うには、<a href="../../apidocs/org/seasar/doma/BatchInsert.html"><code>@BatchInsert</code></a>をDaoのメソッドに注釈します。
			</p>
<source><![CDATA[@Config(config = AppConfig.class)
public interface EmployeeDao {
    @BatchInsert
    int[] insert(List<Employee> employees);
    ...
}]]></source>
			<p>
				デフォルトでは、INSERT文が自動生成されます。
				<code>@BatchInsert</code>の<code>sqlFile</code>に<code>true</code>を設定することで、任意の<a href="../sqlfile.html">SQLファイル</a>にマッピングできます。
			</p>
			<p>
				パラメータの要素の<a href="../entity.html">エンティティクラス</a>に<a href="../entity.html#エンティティリスナー">エンティティリスナー</a>が指定されている場合、挿入の実行前にエンティティリスナーの<code>preInsert</code>メソッドをエンティティごとに呼び出します。
				また、挿入の実行後にエンティティリスナーの<code>postInsert</code>メソッドをエンティティごとに呼び出します。
			</p>
		</section>
		<section name="SQLの自動生成によるバッチ挿入">
			<p>
				戻り値の型は<code>int[]</code>でなければいけません。
				パラメータの型は<a href="../entity.html">エンティティティクラス</a>を要素とする<code>java.lang.Iterable</code>のサブタイプでなければいけません。
				指定できるパラメータの数は1つです。
				引数は<code>null</code>であってはいけません。
				戻り値の配列の要素の数はパラメータの<code>Iterable</code>の要素の数と等しくなります。
				配列のそれぞれの要素が更新された件数を返します。
			</p>
			<subsection name="識別子">
				<p>
					<a href="../entity.html">エンティティティクラス</a>の識別子に、<code>@GeneratedValue</code>が注釈されている場合、
					識別子が自動的に生成され設定されます。
				</p>
			</subsection>
			<subsection name="バージョン番号">
				<p>
					<a href="../entity.html">エンティティティクラス</a>に<code>@Version</code>が注釈されたプロパティがある場合、
					そのプロパティに明示的に1以上の値が設定されていればその値を使用します。
					もし設定されていないか、0以下の値が設定されていれば<code>1</code>を自動で設定します。
				</p>
			</subsection>
			<subsection name="挿入対象プロパティ">
				<h4><code>@Column</code>の<code>insertable</code>要素</h4>
				<p>
					<a href="../entity.html">エンティティティクラス</a>に<code>@Column</code>が注釈されたプロパティがある場合、
					<code>@BatchInsert</code>の<code>insertable</code>要素が<code>false</code>のものは挿入対象外です。
				</p>
				<h4><code>@BatchInsert</code>の<code>exclude</code>要素</h4>
				<p>
					<code>@BatchInsert</code>の<code>exclude</code>要素に指定されたプロパティを挿入対象外とします。
					プロパティがこの要素に指定されていれば、<code>@Column</code>の<code>insertable</code>要素が<code>true</code>であっても挿入対象外です。
				</p>
<source><![CDATA[@BatchInsert(exclude = {"name", "salary"})
int[] insert(List<Employee> employees);]]></source>
				<h4><code>@BatchInsert</code>の<code>include</code>要素</h4>
				<p>
					<code>@BatchInsert</code>の<code>include</code>要素に指定されたプロパティのみを挿入対象とします。
					<code>@BatchInsert</code>の<code>include</code>要素と<code>exclude</code>要素の両方に
					同じプロパティが指定された場合、そのプロパティは挿入対象外になります。
					プロパティがこの要素に指定されていても、<code>@Column</code>の<code>insertable</code>要素が<code>false</code>であれば挿入対象外です。
				</p>
<source><![CDATA[@BatchInsert(include = {"name", "salary"})
int[] insert(List<Employee> employees);]]></source>
			</subsection>
		</section>
		<section name="SQLファイルによるバッチ挿入">
			<p>
				SQLファイルによるバッチ挿入を行うには、<code>@BatchInsert</code>の<code>sqlFile</code>要素に<code>true</code>を設定し、
				メソッドに対応する<a href="../sqlfile.html">SQLファイル</a>を用意します。
			</p>
<source><![CDATA[@BatchInsert(sqlFile = true)
int[] insert(List<Employee> employees);]]></source>
			<p>
				戻り値の型は<code>int[]</code>でなければいけません。
				パラメータは任意の型を要素とする<code>java.lang.Iterable</code>のサブタイプでなければいけません。
				指定できるパラメータの数は1つです。
				引数は<code>null</code>であってはいけません。
				戻り値の配列の要素の数はパラメータの<code>Iterable</code>の要素の数と等しくなります。
				配列のそれぞれの要素が更新された件数を返します。
			</p>
			<p>
				<a href="../entity.html">エンティティ</a>に<a href="../entity.html#エンティティリスナー">エンティティリスナー</a>が指定されていても、エンティティリスナーのメソッドは呼び出しません。
			</p>
			<p>
				たとえば、上記のメソッドに対応するSQLは次のように記述します。
			</p>
<source><![CDATA[insert into employee (id, name, salary, version) 
values (/* employees.id */0, /* employees.name */'hoge', /* employees.salary */100, /* employees.version */0)]]></source>
			<p>
				SQLファイル上では、パラメータの名前は<code>java.lang.Iterable</code>のサブタイプの要素を指します。
			</p>
			<p>
				SQLファイルによるバッチ挿入では、識別子の自動設定やバージョン番号の自動設定は行われません。
				また、<code>@BatchInsert</code>の<code>exclude</code>要素、<code>include</code>要素は参照されません。
			</p>
		</section>
		<section name="一意制約違反">
			<p>
				一意制約違反が発生した場合は、SQLファイルの使用の有無に関係なく<a href="../../apidocs/org/seasar/doma/jdbc/UniqueConstraintException.html"><code>org.seasar.doma.jdbc.UniqueConstraintException</code></a>がスローされます。
			</p>
		</section>
		<section name="クエリタイムアウト">
			<p>
				<code>@BatchInsert</code>の<code>queryTimeout</code>要素にクエリタイムアウトの秒数を指定できます。
			</p>
<source><![CDATA[@BatchInsert(queryTimeout = 10)
int[] insert(List<Employee> employees);]]></source>
			<p>
				この設定は、SQLファイルの使用の有無に関係なく適用されます。
				<code>queryTimeout</code>要素に値を指定しない場合、
				<a href="../config.html">設定クラス</a>に指定されたクエリタイムアウトが使用されます。
			</p>
		</section>
	</body>
</document>